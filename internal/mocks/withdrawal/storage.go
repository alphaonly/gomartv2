// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/alphaonly/gomartv2/internal/domain/withdrawal (interfaces: Storage)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	withdrawal "github.com/alphaonly/gomartv2/internal/domain/withdrawal"
	"github.com/alphaonly/gomartv2/internal/schema"
	gomock "github.com/golang/mock/gomock"
)

// MockStorage is a mock of Storage interface
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// GetWithdrawalsList mocks base method
func (m *MockStorage) GetWithdrawalsList(arg0 context.Context, arg1 string) (*withdrawal.Withdrawals, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWithdrawalsList", arg0, arg1)
	ret0, _ := ret[0].(*withdrawal.Withdrawals)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWithdrawalsList indicates an expected call of GetWithdrawalsList
func (mr *MockStorageMockRecorder) GetWithdrawalsList(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWithdrawalsList", reflect.TypeOf((*MockStorage)(nil).GetWithdrawalsList), arg0, arg1)
}

// SaveWithdrawal mocks base method
func (m *MockStorage) SaveWithdrawal(arg0 context.Context, arg1 withdrawal.Withdrawal) error {
	arg1.Processed = schema.CreatedTime{}
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveWithdrawal", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveWithdrawal indicates an expected call of SaveWithdrawal
func (mr *MockStorageMockRecorder) SaveWithdrawal(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveWithdrawal", reflect.TypeOf((*MockStorage)(nil).SaveWithdrawal), arg0, arg1)
}
